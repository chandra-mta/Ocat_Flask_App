import sys, os
from dotenv import dotenv_values
#
#--- Configuration Dotfiles Settings
#
if os.environ.get('FLASK_RUN_FROM_CLI') == 'true':
    file_config = dotenv_values("/data/mta4/CUS/Data/Env/.localhostenv")
else:
    file_config = dotenv_values("/data/mta4/CUS/Data/Env/.cxcweb-env")
#
#--- Path Settings
#
#For finding the application scripts in directory where this cus script is located
sys.path.insert(0,f"{os.path.dirname(os.path.realpath(__file__))}")
sys.path.insert(1,f"{os.path.dirname(os.path.realpath(__file__))}/cus_app")
sys.path.append('/soft/SYBASE16.0/OCS-16_0/python/python311_64r/lib')
EXTRA_PATHS = file_config.get('EXTRA_PATHS')
if file_config.get('EXTRA_PATHS') is None:
    for path in EXTRA_PATHS.split(":"):
        if path not in sys.path:
            sys.path.append(path)

#
#--- Application Imports
#
from cus_app            import create_app, db       #--- in app/__init__.py
from cus_app.models     import User

from config             import Config, ProdConfig, DevConfig
#
#--- Application Running.
#
if os.environ.get('FLASK_RUN_FROM_CLI') == 'true':
    #Running app on local host flask server, run with DevConfig
    application = create_app(DevConfig)
elif file_config.get('LIVE_DIR') == os.path.abspath(os.path.dirname(__file__)):
    #Run with ProdConfin if script is running in the live web directory, otherwise default to DevConfig
    application = create_app(ProdConfig)
else:
    application = create_app()
